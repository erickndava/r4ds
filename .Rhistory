Batman, good, male, DC
Joker,  bad, male, DC
catwoman, bad, female, DC
Hellboy,  good, male, Dark Horse Comics
"
superheroes <- read_csv(superheroes, skip = 1)
publishers <- "
publisher,  yr_founded
DC, 1934
Marvel, 1939
Image, 1992
"
publishers <- read_csv(publishers, skip =1)
inner_join(superheroes,publishers)
View(superheroes)
View(publishers)
superheroes %>%
inner_join(publishers, by="publisher")
inner_join(publishers, superheroes)
publishers
inner_join(publishers, superheroes)
superheroes
inner_join(superheroes,publishers)
superheroes
superheroes %>%
semi_join(publishers)
superheroes
superheroes %>%
semi_join(publishers)
superheroes
superheroes %>%
left_join(publishers)
superheroes %>%
anti_join(publishers)
getwd()
publishers %>%
inner_join(superheroes)
full_join(superheroes,publishers)
2
class(2)
class(3)
class("3")
head(starwars)
str_to_upper(starwars$homeworld, locale="en")
star_wars <- starwars %>%
mutate(
name_lower = str_to_lower(name),
eye_color_upper = str_to_upper(eye_color)
)
names(star_wars)
star_wars <- starwars[c("name","eye_color","name_lower","eye_color_upper")]
star_wars <- star_wars[c("name","eye_color","name_lower","eye_color_upper")]
names(star_wars)
head(star_wars)
str_count(star_wars$name,pattern="e")
str_count(star_wars$name,"e")
sum(str_count(star_wars$name,"e"))
sum(str_count(star_wars$name_lower,"e"))
sum(str_count(star_wars$name_lower,"E"))
sum(str_count(star_wars$name_lower,"aeiou"))
sum(str_count(star_wars$name_lower,"[aeiou]"))
sum(str_count(star_wars$name_lower,"[^aeiou]"))
EXIT()
exit()
quit()
library(tidyverse)
library(forcats)
#Create factors
x1 <- c("Dec","Apr","Jan","Mar")
x2 <- c("Dec","Apr","Jam","Mar")
#Testing  sorting
sort(x1)
#Creating a factor
month_levels <- c("Jan", "Feb", "Mar", "Apr", "May","Jun", "Jul", "Aug", "Sep", "Oct", "Nov","Dec")
y1 <- factor(x1, levels=month_levels)
y1
sort(y1)
y2 <- factor(x2, levels=month_levels)
y2
factor(x1)
f1 <- factor(x1, levels=unique(x1))
f1
f2 <- x1 %>%
factor() %>%
fct_inorder()
f2
levels(f2)
View(gss_cat)
?gss_cat
gss_cat
gss_cat %>% count(race)
ggplot(gss_cat, aes(race))+geom_bar()
ggplot(gss_cat, aes(race))+geom_bar()+scale_x_discrete(drop=FALSE)
ggplot(gss_cat, aes(rincome))+geom_bar()
gss_cat %>%
count(relig)
gss_cat %>%
count(relig, sort=TRUE)
gss_cat %>%
count(partyid, sort=TRUE)
relig <- gss_cat %>%
group_by(relig) %>%
summarise(
age=mean(age, na.rm=TRUE),
tvhours=mean(tvhours,na.rm=TRUE),
n=n()
)
ggplot(relig,aes(tvhours,relig))+geom_point()
ggplot(relig,aes(tvhours,fct_reorder(relig, tvhours)))+geom_point()
relig %>%
mutate(relig=fct_reorder(relig, tvhours)) %>%
ggplot(aes(tvhours,relig))+
geom_point()
dataminder
gapminder
library(tidyverse)
library(forcats)
library(gapminder)
View(gapminder)
install.packages("gapminder")
View(gapminder)
library(tidyverse)
library(forcats)
library(gapminder)
View(gapminder)
gapminder %>%
count(continent)
? count()
?count()
gapminder %>%
count(continent) %>%
sort(continent, decreasing = FALSE)
gapminder %>%
count(continent) %>%
sort(n, decreasing = FALSE)
gapminder %>%
fct_count(continent)
fct_count(gapminder$continent)
gapminder %>%
count(country)
gapminder %>%
count(year
gapminder %>%
count(year)
View(gss_cat)
gss_cat %>%
count(marital)
gss_cat
gss_cat %>%
count(race) #race, religion
gss_cat %>%
count(religion) #race, religion
gss_cat %>%
count(relig) #race, relig(ion)
relig_summary <- gss_cat %>%
group_by(relig) %>%
summarise(
age=mean(age,na.rm=TRUE)
tvhours=mean(tv_hours, na.rm=TRUE),
n=n()
)
ggplot(relig_summary, aes(tvhours, relig))+geom_point()
relig_summary <- gss_cat %>%
group_by(relig) %>%
summarise(
age=mean(age,na.rm=TRUE),
tvhours=mean(tv_hours, na.rm=TRUE),
n=n()
)
ggplot(relig_summary, aes(tvhours, relig))+geom_point()
relig_summary <- gss_cat %>%
group_by(relig) %>%
summarise(
age=mean(age,na.rm=TRUE),
tvhours=mean(tvhours, na.rm=TRUE),
n=n()
)
ggplot(relig_summary, aes(tvhours, relig))+geom_point()
relig_summary <- gss_cat %>%
group_by(marital) %>%
summarise(
age=mean(age,na.rm=TRUE),
tvhours=mean(tvhours, na.rm=TRUE),
n=n()
)
ggplot(relig_summary, aes(tvhours, relig))+geom_point()
relig_summary <- gss_cat %>%
group_by(marital) %>%
summarise(
age=mean(age,na.rm=TRUE),
tvhours=mean(tvhours, na.rm=TRUE),
n=n()
)
ggplot(relig_summary, aes(tvhours, marital))+geom_point()
relig_summary <- gss_cat %>%
group_by(relig) %>%
summarise(
age=mean(age,na.rm=TRUE),
tvhours=mean(tvhours, na.rm=TRUE),
n=n()
)
ggplot(relig_summary, aes(tvhours, relig))+geom_point()
library(dplyr)
tbl_df(diamonds)
library(tidyverse)
tbl_df(diamonds)
View(diamonds)
damonds %>%
mean()
diamonds %>%
mean(x)
View(diamonds)
diamonds$x %>%
mean()
diamonds %>%
select(x) %>%
mean()
diamonds$x %>%
round(2) %>%
mean()
install.packages()
devtools::install_github("rstudio/EDAWR")
install.packages("devtools")
devtools::install_github("rstudio/EDAWR")
View(storms)
library(EDAWR)
View(storms)
storms %>%
select(wind = 110)
storms %>%
select(wind)
diamonds %>%
select(x) %>%
mean()
View(diamonds)
diamonds %>%
select(x) %>%
round(2) %>%
mean()
diamonds$x %>%
round(2) %>%
mean()
select(diamonds,x) %>%
mean()
select(diamonds,x) %>%
mean()
select(diamonds,x)
select(diamonds,x) %>%
filter(x>5)
storms %>%
head(6)
library(tidyverse)
library(EDWAR)
library(EDAWR)
storms %>%
head(6)
gather(cases, key=year, value=n, 2:4)
tidy_storm <- gather(cases, key=year, value=n, 2:4)
tidy_city <- spread(city, large, small)
tidy_city <- spread(population, size, amount)
getwd()
dir()
View(tidy_storm)
View(smiths)
today()
library(tidyverse)
library(lubridate)
library(nycflights13)
today()
now()
ymd("2019.06.19")
ymd(201906.19)
ymd(20190619)
ymd_hms("20190615 08:10:12")
ymd_hms("20190615 08:10:12", tz=SAST)
ymd_hms("20190615 08:10:12", tz="SAST")
ymd_hms("20190615 08:10:12", tz="UTC")
flights %>%
select(year, month, day, hour, minute)
View(flights)
dtflights <- flights %>%
select(year, month, day, hour, minute)
View(dtflights)
dtflights2 <- flights %>%
select(year, month, day, hour, minute) %>%
mutate(
departure = make_datetime(year, month, day, hour, minute)
)
View(dtflights2)
install.packages("languageserver")
install.packages("hexbin")
library(tidyverse)
library(hexbin)
ggplot(diamonds, aes(carat,price))+
geom_hex()
subtraction_result(){
9283-10928
}
subtraction_result()
subtraction_result <- function(){
9283-10928
}
subtraction_result()
text_output() <- function{
"Do you like apples?"
}
text_output()
addition_result() <- function{
20+612
}
addition_result()
text_output <- function(){
"Do you like apples?"
}
text_output()
addition_result <- function(){
20+612
}
addition_result()
text_output <- function(){
"Do you like apples?"
}
text_output()
addition_result <- function(){
20+612
}
addition_result()
text_output <- function(){
Do you like apples?
}
text_output()
addition_result <- function(){
20+612
}
addition_result
funky <- function(){
"Hello World function"
}
funky
help <- function(){
"Help here. Looking for a way out"
}
funky <- function(){
"Hello World function"
}
funky()
help <- function(){
"Help here. Looking for a way out"
}
help()
foo()
foo <- function(){
a=21+6;
b=a-3
}
foo()
foo <- function(){
a=21+6;
b=a-3;
}
foo()
foo <- function(){
21+6-3
}
foo()
text_single_arg <- function(x){
paste("The",x,"in Spain falls mainly on the plain")
}
text_single_arg(rain)
text_single_arg <- function(x){
paste("The",x,"in Spain falls mainly on the plain")
}
text_single_arg(rain)
add_single_arg <- function(y){
y+22
}
add_single_arg(41)
subt_single_arg <- function(){
98-z
}
subt_single_arg(12)
subt_single_arg <- function(z){
98-z
}
subt_single_arg(12)
text_single_arg <- function(x){
paste("The",x,"in Spain falls mainly on the plain")
}
text_single_arg("rain")
subt_single_arg <- function(z){
98-z
}
subt_single_arg()
subt_single_arg <- function(z){
98-z
}
subt_single_arg(z)
subt_single_arg <- function(z){
98-z
}
subt_single_arg(3)
text_two_args <- (name, state{
paste(name,",I've a feeling we are not in", state," anymore.",sep = "")
}
text_two_args("Toto","Kensas")
text_two_args <- (name, state){
paste(name,",I've a feeling we are not in", state," anymore.",sep = "")
}
text_two_args("Toto","Kensas")
text_two_args <- function(name, state){
paste(name,",I've a feeling we are not in", state," anymore.",sep = "")
}
text_two_args("Toto","Kensas")
add_two_args <- function(a, b){
a+42+b
}
add_two_args(12, 124)
subt_two_args <- function(x, y){
100-x-y
}
subt_two_args(100, 100)
quadratic <- function(a,b,c){
(-b+sqrt(b*b-4*a*c))/(2*a)
}
quadratic(3,4,5)
subt_two_args <- function(x, y){
100-x-y
}
subt_two_args(100, 100)
{r eval=FALSE}? sqrt()
{r eval=FALSE} ? sqrt()
? sqrt()
? exp()
? pi()
? log()
? sqr()
? cos()
myFirstFun <- function(n){
#compute the square of an integr
n*n
}
k <- 10
myFirstRun(k)
myFirstFun <- function(n){
#compute the square of an integr
n*n
}
k <- 10
myFirstFun(k)
rm(k)
k <- 10
source("myIdepFun.R")
library(tidyverse)
typeof(letters
typeof(letters)
typeof(1:10)
x <- list("a","b", 1:10)
length(x)
1:10%%3==0
x <- sqrt(2)^2
x
x <- sqrt(2)^2
x
x-2
# Using iteration
output <- vector("double",ncol(df)) 	# 1.output
for (i in seq_along(df)){				# 2. sequence
ouput[[i]] <- median(df[[i]])    	# 3. body
}
output
library(tidyverse)
df <- tibble(
a=rnorm(10),
b=rnorm(10),
c=rnorm(10),
d=rnorm(10)
)
#median for each column, using copy and paste
median(df$a)
median(df$b)
median(df$c)
median(df$d)
# Using iteration
output <- vector("double",ncol(df)) 	# 1.output
for (i in seq_along(df)){				# 2. sequence
ouput[[i]] <- median(df[[i]])    	# 3. body
}
output
y <- vector("double",0)
seq_along(y)
1:length(y)
mtcars %>% head(5)
mtcars_val <- vector("double",ncol(df))
for (i in seq_along(mtcars)){
mtcars_val[[i]] <- median(mtcars_val[[i]])
}
mtcars_val
mtcars_val <- vector("double",ncol(mtcars))
for (i in seq_along(mtcars)){
mtcars_val[[i]] <- median(mtcars_val[[i]])
}
mtcars_val
mtcars_val <- vector("double",ncol(mtcars))
for (i in seq_along(mtcars)){
mtcars_val[[i]] <- mean(mtcars_val[[i]])
}
mtcars_val
mtcars_val <- vector("real",ncol(mtcars))
for (i in seq_along(mtcars)){
mtcars_val[[i]] <- mean(mtcars_val[[i]])
}
mtcars_val
